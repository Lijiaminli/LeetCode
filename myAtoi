class Solution(object):
    def myAtoi(self, str):
        """
        :type str: str
        :rtype: int
        """
        d = [' ']
        nl = [i for i in str if i not in d]
        l = len(nl)
        nums = []
        if len(nl) == 0:
            return 0
        if nl[0] == '-' or nl[0] == '+':
            if len(nl) < 2 or not (nl[1].isdigit()):
                return 0
            if nl[1].isdigit():
                if nl[0] == '-':
                    nums = ['-']
                    i = 1
                    while (i < l) and (nl[i].isdigit()):
                        nums.append(nl[i])
                        i = i + 1
                elif nl[0] == '+':
                    i = 1
                    while (i < l) and (nl[i].isdigit()):
                        nums.append(nl[i])
                        i = i + 1
        elif nl[0].isdigit():
            i = 0
            while (i<l) and (nl[i].isdigit()):
                nums.append(nl[i])
                i = i + 1
        elif not (nl[0].isdigit()):
            print(0)
            return 0
        nums = "".join(nums)
        num = int(nums)
        if num < -2**31:
            return -2**31
        elif num > 2**31-1:
            return 2**31-1
        else:
            return num
